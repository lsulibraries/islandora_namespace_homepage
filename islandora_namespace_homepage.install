<?php

/**
 * Implements hook_schema().
 */
function islandora_namespace_homepage_schema() {
  $schema['islandora_namespace_homepage'] = array(
    'description' => 'Table that stores lists of IP ranges.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'tbl id.',
      ),
      'prefix' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The prefix itself.',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The full name represented by the prefix.',
      ),
      'description' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'The description of the entity represented by the prefix.',
      ),
      'logo' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'File id (fid) of the managed file that serves as the logo for this entity.',
      ),
      'fp_logo' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'File id (fid) of the managed file that serves as the frontpage logo for this entity.',
      ),
      'color' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'Hexadecimal code for the color of this entity.',
      ),
      'harvested' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => NULL,
        'description' => 'Base url from which records for this namespace have been harvested.',
      ),
      'harvested_regex' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => NULL,
        'description' => 'regex to capture the harvested-from url from a mods abstract field.',
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'uqprefix' => array('prefix'),
    ),
  );

  return $schema;
}

/**
 *
 */
function islandora_namespace_homepage_install() {
  // Create a field.
  $field = array(
    'field_name' => ISLANDORA_NAMESPACE_HOMEPAGE_USER_NAMESPACE_FIELD_NAME,
    'cardinality' => -1,
    'type' => 'text',
    'settings' => array('maxlength' => 255),
  );
  field_create_field($field);

  // Attach an existing field to the user object
  $instance = array(
    'field_name' => ISLANDORA_NAMESPACE_HOMEPAGE_USER_NAMESPACE_FIELD_NAME,
    'entity_type' => 'user',
    'bundle' => 'user',
    'label' => 'Namespaces',
    'widget' => array(
      'type' => 'text_textfield',
    ),
  );
  field_create_instance($instance);
}

/**
 *
 */
function islandora_namespace_homepage_uninstall() {
  field_delete_field('field_namespace');
  field_purge_batch(1);
}

/**
 * Add harvested field to {islandora_namespace_homepage} table.
 */
function islandora_namespace_homepage_update_7100() {
  $spec = array(
    'type' => 'varchar',
    'length' => 255,
    'not null' => FALSE,
    'default' => NULL,
    'description' => 'Base url from which records for this namespace have been harvested.',
  );
  db_add_field('islandora_namespace_homepage', 'harvested', $spec);
}

/**
 * Add harvested_regex field to {islandora_namespace_homepage} table.
 */
function islandora_namespace_homepage_update_7101() {
  $spec = array(
    'type' => 'varchar',
    'length' => 255,
    'not null' => FALSE,
    'default' => NULL,
    'description' => 'regex to capture the harvested-from url from a mods abstract field.',
  );
  db_add_field('islandora_namespace_homepage', 'harvested_regex', $spec);
}
